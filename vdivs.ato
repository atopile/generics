import ElectricSignal

from "resistors.ato" import Resistor
from "capacitors.ato" import Capacitor
from "interfaces.ato" import Power


module VDiv from _VDiv:
    v_in: voltage
    v_out: voltage
    i_q: current

    i_q = 100uA to 10mA

    assert v_in * r_bottom.value / (r_top.value + r_bottom.value) within v_out
    assert v_in / (r_bottom.value + r_top.value) within i_q


module _VDiv:
    signal top
    signal bottom

    out = new ElectricSignal
    out.line ~ out

    power = new Power
    power.vcc ~ top
    bottom ~ power.gnd
    out.reference ~ power

    r_top = new Resistor
    r_bottom = new Resistor
    r_top.package = "0402"
    r_bottom.package = "0402"

    top ~ r_top.1; r_top.2 ~ r_bottom.1; r_bottom.2 ~ bottom
    r_top.2 ~ out.line


module VDivLowPassFilter from VDiv:
    cap = new Capacitor
    cap.package = "0402"
    cutoff_frequency: frequency

    out ~ cap.1; cap.2 ~ bottom
    cap.value = 100nF +/- 10%

    cutoff_frequency: frequency

    assert 1 / (2 * 3.14 * r_top.value * cap.value) within cutoff_frequency
